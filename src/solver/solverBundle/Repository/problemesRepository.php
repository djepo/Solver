<?php

namespace solver\solverBundle\Repository;

use Doctrine\ORM\EntityRepository;
use solver\solverBundle\Entity;

/**
 * problèmesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class problemesRepository extends EntityRepository
{
    /**
     * remonte tous les problemes (=symptomes) par entité, avec les taux les plus fréquent en premier
     * @param type $id 
     */
    public function getByEntite($id) {
        $em=$this->_em;

        $qb=$em->createQueryBuilder();
        $qb2=$em->createQueryBuilder();
        
        //nombre total de pb résolus par entité
        $qb2->select('count(sl2.id)')            
            ->from('solver\solverBundle\Entity\problemes','p2')
            ->leftjoin('p2.solving_log_probleme_aval','sl2')
            ->leftjoin('p2.entite','e2')
            ->where('e2.id='.$id);
            
        //nombre d'occurences de pb résolus par entité et par symptome                
        $qb->select('p.id, p.libelle, p.affiche, p.existe, e.id entite_id, count(sl.id) occurenceResolutionPb, ('.$qb2->getDQL().') total')
           ->from('solver\solverBundle\Entity\problemes','p')
           ->leftjoin('p.solving_log_probleme_aval','sl')
           ->leftjoin('p.entite','e')
           ->where('e.id='.$id)
           ->groupBy('p.id')
           ->orderBy('occurenceResolutionPb', 'DESC');
                
        //var_dump($qb->getQuery()->getResult());
        //return $em->createQuery($query)->getResult();
        return $qb->getQuery()->getResult();
        
    }
   
    /*
   public function getByProbleme($id) {
        $em=$this->_em;
        $symptome = $em->getRepository('solversolverBundle:problemes')->find($id);
        //$symptome->setOccurencesAmont($symptome->computeOccurencesAmont());
        
        
        return $symptome;        
    }  
     * 
     */  
}